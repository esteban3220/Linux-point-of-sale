
CREATE USER 'esteban' IDENTIFIED BY 'junomava3842';
GRANT USAGE ON *.* TO 'esteban'@localhost IDENTIFIED BY 'junomava3842';
GRANT ALL privileges ON *.* TO 'esteban'@localhost;


create database Tienda;
use Tienda;

create table Proveedor (
Empresa varchar(45) primary key, 
Nombre varchar (60),
Direccion varchar(90),
Telefono bigint,
Region varchar(50),
Pais varchar(45),
RFC varchar(45) ,
Estado varchar(45),
Correo varchar(60)
);
create table Aud_proveedor(
Id bigint primary key auto_increment ,
Empresa varchar(45),
Nombre_ant varchar(60),
Direccion_ant varchar(90),
Telefono_ant bigint,
Region_ant varchar(50),
Pais_ant varchar(45),
RFC_ant varchar(45),
Estado_ant varchar(45),
Correo_ant varchar(60),
Nombre_new varchar(60),
Direccion_new varchar(90),
Telefono_new bigint,
Region_new varchar(50),
Pais_new varchar(45),
RFC_new varchar(45),
Estado_new varchar(45),
Correo_new varchar(60),
Usuario varchar(100),
Fecha_mod timestamp,
Accion Varchar(30));

create trigger modifica_vendedor
     after update on Proveedor for each row insert into Aud_proveedor
     (Empresa, 
     Nombre_ant, Direccion_ant, Telefono_ant, Region_ant, Pais_ant, RFC_ant, Estado_ant, Correo_ant,
     Nombre_new, Direccion_new, Telefono_new, Region_new, Pais_new, RFC_new, Estado_new, Correo_new,
     Usuario,Fecha_mod,Accion 
     )
     values 
     (NEW.Empresa,
     OLD.Nombre, OLD.Direccion, OLD.Telefono , OLD.Region, OLD.Pais, OLD.RFC, OLD.Estado, OLD.Direccion,
     NEW.Nombre, NEW.Direccion, NEW.Telefono , NEW.Region, NEW.Pais, NEW.RFC, NEW.Estado, NEW.Direccion,
     USER(),NOW(),'Proveedor Actualizado');
     
create trigger inserta_vendedor
     after insert on Proveedor for each row insert into Aud_proveedor
     (Empresa,
     Nombre_new, Direccion_new, Telefono_new, Region_new, Pais_new, RFC_new, Estado_new, Correo_new,
     Usuario,Fecha_mod,Accion 
     )
     values 
     (NEW.Empresa,
     NEW.Nombre, NEW.Direccion, NEW.Telefono , NEW.Region, NEW.Pais, NEW.RFC, NEW.Estado, NEW.Direccion,
     USER(),NOW(),'Proveedor Nuevo');
    
create trigger elimina_vendedor
     after delete on Proveedor for each row insert into Aud_proveedor
     (Empresa, 
     Nombre_ant, Direccion_ant, Telefono_ant, Region_ant, Pais_ant, RFC_ant, Estado_ant, Correo_ant,
     Usuario,Fecha_mod,Accion 
     )
     values 
     (OLD.Empresa,
     OLD.Nombre, OLD.Direccion, OLD.Telefono , OLD.Region, OLD.Pais, OLD.RFC, OLD.Estado, OLD.Direccion,
     USER(),NOW(),'Proveedor Eliminado');

create table Aud_producto(
Id bigint primary key auto_increment ,
Cod_barra bigint ,
Nombre_ant varchar(100),
Marca_ant varchar(45),
Fecha_proc_ant date,
Fecha_cad_ant date,
Numero_lote_ant int,
Nota_ant varchar(100),
Piezas_ant bigint,
Compra_ant double(9,2),
Venta_ant double(9,2),
Categoria_ant varchar(30),
Subcategoria_ant varchar(45),
Nombre_new varchar(100),
Marca_new varchar(45),
Fecha_proc_new date,
Fecha_cad_new date,
Numero_lote_new int,
Nota_new varchar(100),
Piezas_new bigint,
Compra_new double(9,2),
Venta_new double(9,2),
Categoria_new varchar(30),
Subcategoria_new varchar(45),
Usuario varchar(100),
Fecha_mod timestamp,
Accion Varchar(30));

create trigger modifica_producto
     after update on Producto for each row insert into Aud_producto
     (Cod_barra, 
     Nombre_ant, Marca_ant, Fecha_proc_ant, Fecha_cad_ant, Numero_lote_ant,Nota_ant,Piezas_ant,Compra_ant,Venta_ant,Categoria_ant,Subcategoria_ant,
     Nombre_new, Marca_new, Fecha_proc_new, Fecha_cad_new ,Numero_lote_new,Nota_new,Piezas_new,Compra_new,Venta_new,Categoria_new,Subcategoria_new,
     Usuario,Fecha_mod,Accion 
     )
     values 
     (NEW.SKU,
     OLD.Nombre, OLD.Marca, OLD.Fecha_proc , OLD.Fecha_cad, OLD.Numero_lote, OLD.Nota, OLD.Piezas, OLD.Compra, OLD.Venta, OLD.Categoria, OLD.Subcategoria,
     NEW.Nombre, NEW.Marca, NEW.Fecha_proc , NEW.Fecha_cad, NEW.Numero_lote, NEW.Nota, NEW.Piezas, NEW.Compra, NEW.Venta, NEW.Categoria, NEW.Subcategoria,
     USER(),NOW(),'Producto Recibido');
     
create trigger inserta_producto
     after insert on Producto for each row insert into Aud_producto
     (Cod_barra, 
     Nombre_new, Marca_new, Fecha_proc_new, Fecha_cad_new ,Numero_lote_new,Nota_new,Piezas_new,Compra_new,Venta_new,Categoria_new,Subcategoria_new,
     Usuario,Fecha_mod,Accion 
     )
     values 
     (NEW.SKU,
     NEW.Nombre, NEW.Marca, NEW.Fecha_proc , NEW.Fecha_cad, NEW.Numero_lote, NEW.Nota, NEW.Piezas, NEW.Compra, NEW.Venta, NEW.Categoria, NEW.Subcategoria,
     USER(),NOW(),'Producto Nuevo');
     
create trigger elimina_producto
     after delete on Producto for each row insert into Aud_producto
     (Cod_barra, 
     Nombre_ant, Marca_ant, Fecha_proc_ant, Fecha_cad_ant, Numero_lote_ant,Nota_ant,Piezas_ant,Compra_ant,Venta_ant,Categoria_ant,Subcategoria_ant,
     Usuario,Fecha_mod,Accion 
     )
     values 
     (OLD.SKU,
     OLD.Nombre, OLD.Marca, OLD.Fecha_proc , OLD.Fecha_cad, OLD.Numero_lote, OLD.Nota, OLD.Piezas, OLD.Compra, OLD.Venta, OLD.Categoria, OLD.Subcategoria,
     USER(),NOW(),'Producto Eliminado');

create table Ticket(
Id_ticket bigint zerofill auto_increment primary key,
Usuario varchar(80),
Total double(9,2),
Recibido double(9,2),
Cambio double(9,2),
Tipo_pago varchar(45) default "Efectivo",
Query varchar(45),
Fecha_hora varchar(45)
);

create table Tienda(
Id_tienda int(3) zerofill auto_increment primary key,
Nombre varchar(80),
RFC varchar(45),
Telefono bigint,
icono varchar(45)
);

create table Producto(
SKU bigint primary key,
Nombre varchar(100),
Marca varchar(45) ,
Fecha_proc date,
Fecha_cad date,
Numero_lote int,
Nota varchar(100),
Piezas bigint,
Compra double(9,2),
Venta double(9,2),
Categoria varchar(30),
Subcategoria varchar(45),
foreign key(Marca) references Proveedor(Empresa) ON DELETE CASCADE ON UPDATE CASCADE
);

create table Carrito_compra(
No int,
Producto varchar(80),
P_unitario double(9,2),
Subtotal double(9,2)
);

insert into Carrito_compra(Producto,P_unitario) select  Nombre,Venta from Producto where SKU = '%s'

select Producto , P_unitario , count(Producto) as 'No', (P_unitario * count(Producto)) as SubTotal from Carrito_compra group by Producto;
